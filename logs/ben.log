NB uint_32 is a 32bit unsigned int (ie standard 4 byte unsigned int)
Trying to find out if the idea is actually possible to implement:
	- What is the role of the training data:
		- Seems to be generated by function:
			auto data = generate_training_data(gen_mixture, n_data); in nanopolish_test.cpp 466
			also generated in 344 of same file
		- TransitionTrainingData defined as struct in src/hmm/nanopolish_transition_parameters.h:27

So it seems the authors hard code some initial values which are then taken for machine learning.
Some initial skip_values are defined and then the array (vector) is grown to include more. Define probabilities of moving from e_to_e and e_to_m
(but not k to k or m to k?)

